name: Publish Package
on:
  push:
    tags:
      - v*
jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Load cached Poetry installation
        uses: actions/cache@v3
        with:
          path: ~/.local
          key: poetry-${{ hashFiles('**/poetry.lock') }}
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      - name: Check version
        id: check_version
        run: |
          VERSION=$(echo ${{ github.ref }} | sed 's/refs\/tags\/v//')
          PYPROJECT_VERSION=$(poetry version -s)
          if [ "$VERSION" != "$PYPROJECT_VERSION" ]; then
            echo "Version mismatch: Tag version ($VERSION) does not match pyproject.toml version ($PYPROJECT_VERSION)"
            exit 1
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
      - name: Build
        run: |
          poetry self add "poetry-dynamic-versioning[plugin]"
          poetry build
      - name: Publish distribution ðŸ“¦ to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_TOKEN }}